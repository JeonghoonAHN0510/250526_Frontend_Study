[ 프로그래밍 관점 ]
    - 프로그래밍을 구성하기 위한 접근 방식
        1. 절차지향 프로그래밍 : C언어
            1) 함수(절차)를 이용한 순서가 정해진 작업
            2) 코드가 위에서 아래로 순차적으로 실행

        2. 객체지향 프로그래밍 : JAVA, JS, PYTHON, C++
            1) 객체(데이터/기능)를 하나로 묶어서 처리하는 작업
            2) 코드의 재사용이나 확장에 유리

[ 객체 ]
    1. 정의
        객체(Object)     : 주체가 아닌 다른 실체
        주체(Subject)    : '나'라는 실체, 중심 
    2. 생활 속 객체란? 어떠한 대상을 정의 가능한 것 = 모두
    3. 개발자(주체) 관점에서 컴퓨터 속 기능(객체)을 만든다.

[ JS 객체 ]
    1. 종류
        1) 클래스 기반 객체 : class(객체를 만들기 위한 설계도)
        2) 클래스 없는 객체 : { }을 이용
    2. 객체 vs 배열
        1) 객체 : { }, 속성명 , 자료 순서 X, 정보 표현
        2) 배열 : [ ], 인덱스 , 자료 순서 O, 목록 표현
    * 주의할 점 : 변수는 객체와 배열 자료를 1개 저장하는 메모리 공간
        const var1 = [ 10, 'hello' ];                       -> 자료 2개를 저장하는 '배열 자료 1개'를 변수에 저장
        const var2 = { props1 : 10, props2 : 'hello' };     -> 자료 2개를 속성으로 구분하여 '객체 자료 1개'를 변수에 저장
        -> 정보를 만들 때는 객체화, 동일한 정보(객체)들을 묶을 때는 배열