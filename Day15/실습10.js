// 실습9 과제: 학생별 수강과목 및 성적표 대시보드 만들기
// 학생정보, 개설된 '과목정보', 학생들의 '수강신청내역' 각각 존재
// 각 학생별로 어떤 과목을 수강했고, 어떤 성적을 받았는지 보여주는 관리자 대시보드 만들기.
// 성적이 'F'면 'fail', 아니면 'pass'

// * 요구 사항
// 1. 데이터 모델링 : 배열과 객체를 활용하여 샘플데이터로 구성하시오.
//    (1) 아래 각 정보는 필수로 합니다. 
//    - 학생정보 : 학번, 이름, 전공
//    - 과목정보 : 과목코드, 과목명, 교수명
//    - 수강신청내역 : 수강신청내역코드, 학번, 과목코드, 성적
//    (2) 각 정보별 샘플(임의)데이터는 3개 이상씩 하여 배열 또는 객체를 선언 합니다.
// 2. 구현 로직
// 3. 최종 결과물 예시
//    * 웹페이지에 다음과 같은 형식으로 각 유저의 정보가 표시되어야 합니다.
//    * 단  HTML 와 CSS 구성/코드 는 달라도 됩니다.

const 학생정보 = [
    { 학번: 1, 이름: '유재석', 전공: '수학과' },
    { 학번: 2, 이름: '강호동', 전공: '체육과' },
    { 학번: 3, 이름: '신동엽', 전공: '미디어과' }];

const 과목정보 = [
    { 과목코드: 1, 과목명: '수학', 교수명: '김현수' },
    { 과목코드: 2, 과목명: '영어', 교수명: '김영어' },
    { 과목코드: 3, 과목명: '과학', 교수명: '김과학' }];

const 수강신청내역 = [
    { 수강신청내역코드: 1, 학번: 1, 과목코드: 1, 성적: 'A' },
    { 수강신청내역코드: 2, 학번: 2, 과목코드: 3, 성적: 'F' },
    { 수강신청내역코드: 3, 학번: 3, 과목코드: 2, 성적: 'B' },
    { 수강신청내역코드: 4, 학번: 1, 과목코드: 2, 성적: 'C' },
    { 수강신청내역코드: 5, 학번: 2, 과목코드: 1, 성적: 'D' },
    { 수강신청내역코드: 6, 학번: 3, 과목코드: 3, 성적: 'B' }];


let html = `<div> <h2> 학생별 성적 대시보드 </h2> </div>`
for (i = 0; i <= 학생정보.length - 1; i++) {
    html += `<div style='border-top: 1px solid black;'> <div> <div style='font-weight: bold; font-size: 25px; margin: 20px 0px;'> ${ 학생정보[i].이름 } (${ 학생정보[i].전공}) </div> </div> `
    let idCheck = false;
    for( j = 0 ; j <= 수강신청내역.length - 1 ; j++ ){
        if( 학생정보[i].학번 == 수강신청내역[j].학번 ){

            // 과목코드는 있지만 과목이름/교수자 찾아라.
            for( s = 0; s <= 과목정보.length - 1; s++){
                if(과목정보[s].과목코드 == 수강신청내역[j].과목코드){
                    html += `<div style='font-weight: bold; font-size: 20px;'>  ${과목정보[s].과목명} (${과목정보[s].교수명}) </div>`
                    if(수강신청내역[j].성적 !== 'F'){
                        idCheck = true;
                    }
                    
                }
            } 
             

            html += `<ul> <li> 성적: ${ 수강신청내역[j].성적 } </li> `
            if(idCheck == true){
                html += `<li>  이수 여부: <span style='color: blue; font-weight: bold;'> Pass </span> </li> </ul> `
            } else {
                html += `<li> 이수 여부: <span style='color: red; font-weight: bold;'> Fail </span> </li> </ul> `
            }
        }
    } html += `</div>`

}
document.write(html);





/*

for (j = 0; j <= 수강신청내역.length - 1; j++) {
        if (학생정보[i].학번 == 수강신청내역[j].학번) {
            학생성적.push = 수강신청내역[j].성적;
            console.log(학생성적)
            for (s = 0; s <= 과목정보.length - 1; s++) {
                if (수강신청내역[j].과목코드 == 과목정보[s].과목코드) {
                    학생과목.push = 과목정보[s].과목명;
                    교수이름.push = 과목정보[s].교수명;
                }
            }
        }
    }


    for (v = 0; v <= 학생성적.length - 1; v++) {
        if (학생성적[v] == "F") {
            이수여부.push = "Fail";
        } else {
            이수여부.push = "Pass";
        }
    }

    for (a = 0; a <= 학생성적.length - 1; a++) {
        html += `<ul> ${학생과목[a]} (${교수이름[a]}) <li> 성적 :${학생성적[a]} </li> <li>이수여부: ${이수여부[a]} </li> </ul> `;
    }


    if (학생성적 == 'F') {
        이수여부.push = 'Fail';
    } else {
        이수여부.push = 'Pass';
    }

html += `${학생정보[i].이름} (${학생정보[i].전공})`;
html += `<ul> ${학생과목} (${교수이름}) <li> 성적 :${학생성적[0]} </li> <li>이수여부: ${이수여부} </li> </ul> `
html += `<ul> ${학생과목} (${교수이름}) <li> 성적 :${학생성적[1]} </li> <li>이수여부: ${이수여부} </li> </ul> `


// let html = `<div> <h2> 학생별 성적 대시보드 </h2> </div>`
// for (i = 0; i <= 학생정보.length - 1; i++) {
//     let 학생 = 학생정보[i];
//     let 학생성적 = [];
//     let 학생과목 = [];
//     let 교수이름 = [];
//     let 이수여부 = [];
//     html += `<div> ${학생정보[i].이름}(${학생정보[i].전공}) </div>`;
//     for (s = 0; s <= 수강신청내역.length - 1; s++) {
//         if (학생정보[i].학번 == 수강신청내역[s].학번) {
//             학생성적.push = 수강신청내역[s].성적
//             console.log(학생성적)
//             // 여까지 됨.
//             for (p = 0; p <= 학생성적.length - 1; p++) {
//                 if (학생성적[p] == 'F') {
//                     이수여부.push = "Fail";
//                 } else {
//                     이수여부.push = "Pass";
//                 } console.log(이수여부)
//             }
//             for (m = 0; m <= 과목정보.length - 1; m++) {
//                 if (학생정보[i].학번 == 수강신청내역[s].학번 || 과목정보[m].과목코드 == 수강신청내역[s].과목코드)
//                     학생과목.push = 과목정보[m].과목명
//                 교수이름.push = 과목정보[m].교수명

//             }
//         }
//     }

// }
// document.write(html);


document.write(html);
*/