// 실습9 과제: 회원별 구독 상태 (관리자) 대시보드 만들기
// 우리 회사의 서비스에 가입한 '회원' 목록, 회사가 제공하는 '구독 상품' 목록, 
// 그리고 어떤 회원이 어떤 상품을 언제까지 구독하는지를 나타내는 '구독 내역' 목록이 있습니다. 
// 이 세 가지 데이터를 조합하여 각 회원의 현재 구독 상태를 보여주는 관리자용 대시보드를 웹페이지에 동적으로 구현해야 합니다.

// * 요구 사항
// 1. 데이터 모델링 : 배열과 객체를 활용하여 샘플데이터로 구성하시오.
//    (1) 아래 각 정보는 필수로 합니다. 
//    - 회원정보 : 아이디 , 회원이름
//    - 구독상품 : 상품명 , 가격 
//    - 구독내역 : 구독종료일 
//    (2) 각 정보별 식별 가능한 정보를 추가합니다.
//    (3) 각 정보별 샘플(임의)데이터는 3개 이상씩 하여 배열 또는 객체를 선언 합니다.
// 2. 구현 로직
// 3. 최종 결과물 예시
//    * 웹페이지에 다음과 같은 형식으로 각 유저의 정보가 표시되어야 합니다.
//    * 단  HTML 와 CSS 구성/코드 는 달라도 됩니다.

const 회원정보 = [{회원코드 : '001', 아이디 : 'id1', 회원이름 : '김개발'},
                  {회원코드 : '002', 아이디 : 'id2', 회원이름 : '최코딩'},
                  {회원코드 : '003', 아이디 : 'id3', 회원이름 : '박서버'}];
const 구독상품 = [{상품코드 : '001', 상품명 : '프리미엄', 가격 : '월 15,000원'},
                  {상품코드 : '002', 상품명 : '스탠다드', 가격 : '월 12,900원'},
                  {상품코드 : '003', 상품명 : '베이직', 가격 : '월 9,900원'}];
const 구독내역 = [{구독로그 : '1', 회원코드 : '001', 상품코드 : '001', 구독종료일 : '2025-07-17'},
                  {구독로그 : '2', 회원코드 : '002', 상품코드 : '003', 구독종료일 : '2025-06-15'}];
const today = '2025-06-17';

let html = `<h1>회원 구독 상태 대시보드</h1>`;
for (let i = 0; i <= 회원정보.length - 1; i++){                             // 회원정보 1번씩 호출
    let 회원객체 = 회원정보[i];                                             // 회원객체 선언 (여러번 사용할 것이기 때문)
    let 구독상태 = false;                                                   // 구독상태 기본값 false -> 구독이 활성화 상태면 true 대입
    let 구독여부 = false;                                                   // 구독여부 기본값 false -> 구독한 내역이 있다면 true 대입
    html += `<div style = 'border-top: 1px solid #777777;'> <h3> ${회원객체.회원이름} </h3>`;
    for (let j = 0; j <= 구독내역.length - 1; j++){                         // 구독내역 1번씩 호출
        let 구독내역객체 = 구독내역[j];                                     // 구독내역객체 선언
        if ( 회원객체.회원코드 == 구독내역객체.회원코드 ){                  // 구독내역 회원코드와 회원정보 회원코드가 같다면 -> 구독한 내역이 있다
            구독여부 = true;                                                // 구독 내역이 있기에 구독여부 true 대입
            for (let k = 0; k <= 구독상품.length - 1; k++){                 // 구독상품 1번씩 호출
                let 구독상품객체 = 구독상품[k];                             // 구독상품객체 선언
                if ( 구독상품객체.상품코드 == 구독내역객체.상품코드 ){      // 구독상품 상품코드와 구독내역 상품코드가 같다면 -> 구독내역에 상품이 있다면
                    let 구독상품명 = 구독상품객체.상품명;                   // 구독상품명 선언
                    let 구독가격 = 구독상품객체.가격;                       // 구독가격 선언
                    if ( today < 구독내역객체.구독종료일 ){                 // 구독종료일이 오늘보다 크다면 -> 구독종료일이 남아있다면
                    구독상태 = true;                                        // 구독이 활성화 상태이므로 구독상태 true 대입
                    }
                    if ( 구독여부 = true ){                                 // 구독여부 == true인 회원이라면
                        html += `<ul>
                                <li> 구독 상품 : ${구독상품명} (${구독가격}) </li>`;
                        if ( 구독상태 == true ){                            // + 구독상태 == true인 회원이라면
                            html += `<li> 상태 : <span style = 'color:green; font-weight:bold;'>활성</span> </li></ul></div>`;
                        } else {                                            // 구독여부 == true && 구독상태 == false인 회원이라면
                            html += `<li> 상태 : <span style = 'color:gray; font-weight:bold;'>만료</span> </li></ul></div>`;
                        }
                    }
                }
            }
        }
    }
    if ( 구독여부 == false ){                                               // 구독여부 == false인 회원이라면 -> 구독 내역조차 없는 회원이라면
        html += `구독 내역이 없습니다.`;
    }
}

document.write( html );