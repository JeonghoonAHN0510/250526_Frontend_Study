/*
[ 함수(function) ]
    1. 정의 : 특정한 { } 안에 미리 정의된 코드
    2. 목적 : 미리 정의된 코드를 재사용 -> 편의성
        - 변수 : 값/데이터를 저장하여 재사용            객체명.속성명   : 자료 호출
        - 반복문 : 특정한 조건에 따른 코드 재사용
        - 함수 : 미리 정의된 코드에 따른 코드 재사용    객체명.속성명() : 함수 호출
    3. 함수 종류
        (1) 라이브러리  : 미리 만들어진 함수
            console.log(), document.write(), .push(), .splice() 등등
        (2) 정의 함수   : 내가(개발자) 만든 함수
    4. JS에서는 함수도 자료형
    5. JS함수 표현 방법
        (1) *선언적 함수*           : 선언 키워드를 이용하여 함수 생성      / function 함수명( ){ };
        (2) 익명 함수               : 함수명 없이 정의하여 함수 생성        / function ( ){ };
        (3) 람다식 함수(화살표)     : 선언 키워드와 함수명 없이 함수 생성   / ( ) => { };
    6. 함수 생성 방법
        (1) function        : 함수를 선언하기 위한 키워드
        (2) 함수명          : (카멜표기법 권장)
        (3) ( )             : 매개변수(함수 안으로 들어오는 데이터를 저장하는 변수)
        (4) { }             : 함수가 실행될 때 처리되는 명령어
        (5) return          : 함수가 종료되면서 함수를 호출했던 곳으로 반환되는 값
    7. 함수 호출 방법
        함수명();
        함수명( 인수1, 인수2 );     : 쉼표로 구분하여 정해진 매개변수에 인수 대입
*/

// [ 선언적 함수 ]
// 1. 함수 만들기
function 내가만든함수( ){
    console.log( '내가 처음 만든 함수' )
};
// 2. 함수 호출하기
내가만든함수();

// [ 함수 예시1 ]
function plus ( a, b ){         // 매개변수 a, b
    console.log( a + b );
    return 10;                  // 리턴값 : 함수 종료시 반환되는 값
};
plus( 2, 7 );                   // a에 2를 대입, b에 7을 
// [ 함수 예시2 ]
function 믹서기함수 ( 들어오는과일명 ){
    let 믹서결과 = 들어오는과일명 + '주스';
    return 믹서결과;
}
let 컵1 = 믹서기함수( '사과' );
console.log( 컵1 );