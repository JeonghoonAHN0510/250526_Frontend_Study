[ Github ] - VCS(Version Control System)
- 분산 버전 관리 툴을 제공하는 웹 서비스
    1. 웹 서비스에서 코드들을 저장하는 코드 저장소
    2. 다양한 기업들이 사용하는 협업 플랫폼

[ Github 이용방법 ]
- VSCode와 Github 최초 연동 (PC당 1번)
    1. VSCode(소스제어) : Windows용 GIT 다운로드
    2. Git for Windows/x64 Setup. 다운로드 후 실행
    3. 설치 완료 후 VSCode 재실행
    4. 'Github에 게시' -> 로그인
    5. publish to github public repository
    6. 등록자 등록하기.
    7. [메시지]에 업로드할 때 기록할 메모 작성 -> [ 커밋 및 푸시 ]
    8. 우측 하단 [ 원격 추가 ] 클릭 -> main(원격 추가)


- 코드를 올리는 등록자 등록 (자리 바뀔때마다 해야함.)
    1. [터미널] -> [새 터미널]
    2. 터미널 상단 [+] [v] 클릭 후 [ git bash ] ( github 전용 터미널 )
    3. git config --global user.name [name 확인]
    4. git config --global user.email [email 확인]
    5. git config --global user.name JeonghoonAHN0510 [name 설정]
    6. git config --global user.email Jeonghoonahn0510@gmail.com [email 설정]


[ 주요 용어 ]
    1. repository : 저장소 (코드들을 저장하는 하나의 저장소)(주로 프로젝트 단위)
    2. commit : 코드 수정 완료(로컬 pc 기준)
    3. push : 로컬 코드를 깃허브에 반영


* 로그아웃 전 꼭 '커밋/푸시'하기
[ VSCode Git 로그아웃 ]
    1. 좌측 하단 메뉴[계정] 클릭
    2. 로그아웃
[ 현재PC Git 로그아웃 ]
    1. 윈도우 검색창 : 자격 증명 관리자
    2. [Windows 자격 증명] 클릭
    3. [일반 자격 증명] 클릭 후 git 제거

[ 자리 옮긴 후 ]
    1. [리포지토리 복제] 클릭
    2. github에서 복제 클릭 후 로그인
    3. 가져올 리포지토리 선택 후 복제
    4. 코드 올리는 등록자 터미널에서 등록
    5. 커밋/푸시 클릭 후 로그인하면 끝

=========================================================================================
[ 팀 Git 저장소 만들기 ]
    1. 새로운 폴더 및 파일 생성
    2. 해당 폴더를 github에 게시(개인정보 없으니 public 권장)
    3. 팀원 초대하기
        Settings -> collaborators -> Add people
    4. 초대받기
        Git 페이지 우측 상단에 메일 or Git에 연동한 이메일 확인
    5. 초대 승인 후 리포지토리 복제

[ branches ]
- 팀원 1명당 1개의 브랜치 생성( 서로 다른 브랜치끼리 영향 x )
    소스제어 -> 분기 -> 새 분기 만들기
- 다른 브랜치의 코드 가져오기(풀)

[ 브랜치 활용 ]
- 좌측 하단 'main' <- 현재 사용중인 브랜치명
1. 해당 브랜치명 클릭해서 변경(체크아웃)할 브랜치명 선택!
    - 변경하기전에 주의할 점 : 최종으로 [커밋/푸시] 한다
    - 다른 브랜치가 안 보인다면, [페치] 하기
2. main에서 각각의 팀원 코드 [풀]해서 취합하기(내 코드도 포함)
    - 취합할 때, 겹치는 코드가 있으면 코드를 병합 편집기를 이용하여 취합하기
    - 한 사람의 취합이 끝날 때마다, [커밋/푸시]하기
3. 팀원은 취합이 끝나면, main 브랜치 [풀]하기