// [ 실습13 : 미니 전화번호부 페이지 ] *제출
// 1. 목표
// - 사용자가 이름, 전화번호, 그리고 간단한 메모를 함께 저장하여 자신만의 상세한 연락처 목록을 만들고,
//   등록된 모든 연락처를 한눈에 볼 수 있는 전화번호부 웹 페이지를 만듭니다.
// 2. 화면 구성
// - 페이지는 사용자가 정보를 입력하는 **'연락처 등록 영역'**과
//   그 결과를 보여주는 **'연락처 목록 영역'**으로 명확히 구분되어야 합니다.
// - 연락처 등록 영역:
//     - 이름 입력: 저장할 사람의 이름을 텍스트로 자유롭게 입력할 수 있어야 합니다. (예: "홍길동")
//     - 전화번호 입력: 연락처의 전화번호를 숫자로 입력할 수 있어야 합니다 (예:010-1234-5678)
//     - 메모 입력: 해당 연락처에 대한 추가 정보(소속, 관계 등)를 텍스트로 입력할 수 있는 칸이 있어야 합니다. (예: "OO회사 부장")
//     - 등록 버튼: 이름과 전화번호를 입력한 후, 목록에 추가하기 위한 "등록" 버튼이 있어야 합니다.

// - 연락처 목록 영역:
//     - 등록된 모든 연락처 정보를 보여주는 표가 있어야 합니다.
//     - 표는 "이름", "전화번호", "메모" 순서의 열로 구성되어야 합니다.
// 3. 핵심 기능
// - 초기 데이터 표시:
//     - 사용자가 페이지에 처음 방문했을 때, 전화번호부 사용법을 쉽게 이해할 수 있도록 
//       두 개의 예시 연락처가 목록 표에 기본적으로 표시되어 있어야 합니다.
// - 연락처 등록 기능:
//     - 사용자가 '등록 영역'에 이름과 전화번호를 모두 입력하고 "등록" 버튼을 클릭하면, 
//       해당 연락처가 '목록 영역' 표의 가장 아래쪽에 새로운 행으로 즉시 추가되어야 합니다.


// (1) '등록'함수 : '등록버튼' 클릭시, 입력받은 3가지 정보를 배열에 저장하는 함수
//     함수명      : '등록함수'
//     매개변수    : 없음
//     반환값      : 없음
//     로직        : 1. input으로부터 입력받은 값 가져오기
//                     2. 입력값 3개를 객체로 구성
//                     3. 구성된 객체를 가계부목록(배열)에 저장
//     실행조건    : '등록버튼' 클릭(onclick)했을 때
// (2) '전체조회'함수
//     함수명      : '전체조회함수'
//     매개변수    : 없음
//     반환값      : 없음
//     로직        : 특정한 구역(table)에 배열 내 모든 정보를 HTML 형식으로 출력
//     실행조건    : 1. 페이지가 열렸을 때(최초 1번)
//                     2. 등록을 성공했을 때(새로고침)

// 데이터 모델링
const 전화번호목록 = [
    {전화번호코드 : 1, 이름 : '유재석', 전화번호 : '010-1234-5678', 메모 : '연예인'},
    {전화번호코드 : 2, 이름 : '강호동', 전화번호 : '010-5678-1234', 메모 : '연예인'}
]
let 전화번호자동코드 = 전화번호목록[전화번호목록.length - 1].전화번호코드;
// 함수 구현
function 등록함수(){
    // console.log('----등록함수 실행----')
    // 마크업 객체 가져오기
    const nameInput = document.querySelector('#nameInput');         // console.log( nameInput );
    const numberInput = document.querySelector('#numberInput');     // console.log( numberInput );
    const memoInput = document.querySelector('#memoInput');         // console.log( memoInput );
    // 각 마크업 객체로부터 입력값 가져오기(value)
    const name = nameInput.value;                                   // console.log( name );
    const number = numberInput.value;                               // console.log( number );
    const memo = memoInput.value;                                   // console.log( memo );
    // 객체 만들기 -> {전화번호코드 : , 이름 : '', 전화번호 : '', 메모 : ''}
    // 전화번호코드 자동 증가
    전화번호자동코드++;
    const obj = {전화번호코드 : 전화번호자동코드, 이름 : name, 전화번호 : number, 메모 : memo};
    // console.log( obj );
    // 구성한 객체 배열에 저장
    전화번호목록.push( obj );
    // 등록 성공시, 전체조회함수 실행
    전체조회함수();
}   // 함수 종료
전체조회함수(); // 페이지 키자마자 실행
function 전체조회함수(){
    // console.log('----전체조회함수 실행----');
    // 객체 1개 당 <tr> </tr> 1개씩
    // 어디에 -> <tbody id="contactBody">에
    const contactBody = document.querySelector('#contactBody');     // console.log( contactBody );
    // 무엇을 -> 생성된 객체를
    let html = ``;
    for (let i = 0; i <= 전화번호목록.length - 1; i++){
        const obj = 전화번호목록[i];
        html += `<tr>
                    <td>${obj.이름}</td>
                    <td>${obj.전화번호}</td>
                    <td>${obj.메모}</td>
                </tr>`
    }
    // 출력
    contactBody.innerHTML = html;
}